package listaenlazada;

import java.awt.HeadlessException;
import java.util.LinkedList;
import javax.swing.JOptionPane;

/**
 *
 * @author USUARIO
 */
public class ListaEjemplo extends javax.swing.JFrame {

    public static LinkedList contenedor = new LinkedList();
    public int encontrar;
    Nodo Primero = null;
    Nodo Ultimo = null;
    String d;
    int tamaño = 0;

    public ListaEjemplo() {
        initComponents();
    }

    private String recorrido(LinkedList it, String msg) {
        int i = 0;
        String r = msg + "\n";
        while (i < it.size()) {
            r += "\t" + it.get(i).toString() + "";
            i++;
        }
        return (r);
    }

    public void insertardespues(int n, String dato) {
        Nodo nuevo = new Nodo(dato);
        if (Primero == null) {
            Primero = nuevo;
        } else {
            Nodo puntero = Primero;
            int contador = 0;
            while (contador < n && puntero.siguiente != null) {
                puntero = puntero.siguiente;
                contador++;
            }
            nuevo.siguiente = puntero.siguiente;
            puntero.siguiente = nuevo;
        }
        tamaño++;
    }

    public void eliminarEnPosicion(int n) {
        if (Primero != null) {
            if (n == 0) {
                Nodo primer = Primero;
                Primero = Primero.siguiente;
                primer.siguiente = null;
                tamaño--;
            } else if (n < tamaño) {
                Nodo puntero = Primero;
                int contador = 0;
                while (contador < (n - 1)) {
                    puntero = puntero.siguiente;
                    contador++;
                }
                Nodo temp = puntero.siguiente;
                puntero.siguiente = temp.siguiente;
                temp.siguiente = null;
                tamaño--;
            }
        }
    }

    public String vaciarlista() {
        if (Primero != null) {
            String aux = Primero.dato;
            Primero = Primero.siguiente;
            return aux;

        } else {
            return null;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        campo1 = new javax.swing.JTextField();
        insertarPrincipio = new javax.swing.JButton();
        insertarFinal = new javax.swing.JButton();
        mostrarLista = new javax.swing.JButton();
        campo2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        vaciarLista = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        eliminarPrincipio = new javax.swing.JButton();
        eliminarFinal = new javax.swing.JButton();
        campoPosicion = new javax.swing.JTextField();
        insertarEnUnaPosicion = new javax.swing.JButton();
        eliminarEnUnaPosicion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Insertar");

        campo1.setText("        ");

        insertarPrincipio.setText("INSERTAR PRINCIPIO");
        insertarPrincipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarPrincipioActionPerformed(evt);
            }
        });

        insertarFinal.setText("INSERTAR FINAL");
        insertarFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarFinalActionPerformed(evt);
            }
        });

        mostrarLista.setText("MOSTARAR");
        mostrarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarListaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Tamaño");

        vaciarLista.setText("ELIMINAR");
        vaciarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaciarListaActionPerformed(evt);
            }
        });

        area.setColumns(20);
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        eliminarPrincipio.setText("ELIMINAR PRINCIPIO");
        eliminarPrincipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPrincipioActionPerformed(evt);
            }
        });

        eliminarFinal.setText("ELININAR FINAL");
        eliminarFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarFinalActionPerformed(evt);
            }
        });

        insertarEnUnaPosicion.setText("INSERTAR EN POSICIÓN");
        insertarEnUnaPosicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarEnUnaPosicionActionPerformed(evt);
            }
        });

        eliminarEnUnaPosicion.setText("ELIMINAR EN POSICIÓN");
        eliminarEnUnaPosicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarEnUnaPosicionActionPerformed(evt);
            }
        });

        jLabel3.setText("Posición");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(insertarEnUnaPosicion)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(campoPosicion, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(insertarPrincipio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eliminarPrincipio, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(eliminarFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminarEnUnaPosicion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(insertarFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(61, 61, 61))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(campo1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vaciarLista)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mostrarLista)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(campo2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campo1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(vaciarLista)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertarPrincipio)
                    .addComponent(insertarFinal))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminarPrincipio)
                    .addComponent(eliminarFinal)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoPosicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertarEnUnaPosicion)
                    .addComponent(eliminarEnUnaPosicion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(mostrarLista)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campo2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertarPrincipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarPrincipioActionPerformed
        // TODO add your handling code here:
        d = campo1.getText();
        Nodo nuevo = new Nodo(d);
        try {
            if (d.length() == 0) {
                JOptionPane.showMessageDialog(null, "No hay elemetos para ingresar a la lista");

            } else {
                if (Primero == null) {
                    Primero = nuevo;
                    Ultimo = nuevo;
                    campo1.setText("");

                } else {
                    nuevo.siguiente = Primero;
                    Primero = nuevo;
                    campo1.setText("");
                }
                tamaño++;
                Nodo g = new Nodo(d);
                contenedor.add(g);
                JOptionPane.showMessageDialog(null, "Elemento Ingresado al inicio de la lista");
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "No se ingreso elemento a la lista " + e);
        }
    }//GEN-LAST:event_insertarPrincipioActionPerformed

    private void vaciarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaciarListaActionPerformed
        // TODO add your handling code here:

        area.setText("");
        campo2.setText("");
        vaciarlista();
        tamaño--;
    }//GEN-LAST:event_vaciarListaActionPerformed

    private void insertarFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarFinalActionPerformed
        // TODO add your handling code here:

        d = campo1.getText();

        Nodo nuevo = new Nodo(d);
        try {
            if (d.length() == 0) {
                JOptionPane.showMessageDialog(null, "No hay elemetos para ingresar a la lista");
            } else {

                if (Primero == null) {
                    Primero = nuevo;
                    Ultimo = nuevo;
                    campo1.setText("");
                } else {
                    Ultimo.siguiente = nuevo;
                    Ultimo = nuevo;
                    campo1.setText("");
                }
                tamaño++;
                Nodo g = new Nodo(d);
                contenedor.add(g);
                JOptionPane.showMessageDialog(null, "Elemento Ingresado al final de la lista");
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "No se ingreso elemento a la lista " + e);
        }

    }//GEN-LAST:event_insertarFinalActionPerformed

    private void mostrarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarListaActionPerformed
        // TODO add your handling code here:
        LinkedList rec = new LinkedList();
        if (Primero != null) {
            Nodo reco = Primero;

            area.append("[ ");
            while (reco != null) {
                rec.addLast(d);

                area.append(reco.dato + "   ");

                reco = reco.siguiente;
            }
            rec.addFirst(d);
            System.out.println();
            area.append("]");
        }

        campo2.setText(String.valueOf(tamaño));
    }//GEN-LAST:event_mostrarListaActionPerformed

    private void eliminarPrincipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPrincipioActionPerformed
        // TODO add your handling code here:
        try {
            int conf = JOptionPane.showConfirmDialog(this, "¿Quieres eliminar un elemento?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (conf == 0) {
                if (Primero != null) {
                    Nodo primer = Primero;
                    Primero = Primero.siguiente;
                    primer.siguiente = null;
                    tamaño--;
                    JOptionPane.showMessageDialog(null, "Se elimino elemento al principio de la lista");
                }
            }

        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "No se elimino elemento " + e);
        }
    }//GEN-LAST:event_eliminarPrincipioActionPerformed

    private void eliminarFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarFinalActionPerformed
        // TODO add your handling code here:
        try {
            int conf = JOptionPane.showConfirmDialog(this, "¿Quieres eliminar un elemento?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (conf == 0) {
                if (Primero != null) {
                    if (Primero.siguiente == null) {
                        Primero = null;
                    } else {
                        Nodo puntero = Primero;
                        while (puntero.siguiente.siguiente != null) {
                            puntero = puntero.siguiente;
                        }
                        puntero.siguiente = null;
                    }
                    JOptionPane.showMessageDialog(null, "Se elimino elemento al final de la lista ");
                }
            }

        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "No se elimino elemento " + e);
        }
    }//GEN-LAST:event_eliminarFinalActionPerformed

    private void insertarEnUnaPosicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarEnUnaPosicionActionPerformed
        // TODO add your handling code here:
        d = campo1.getText();
        
        int datoPosicion = Integer.parseInt(campoPosicion.getText());
        //Integer dato = new Integer(datoPosicion);
        //String cadena =datoPosicion+"";
         try {
            if (d.length()==0) {
                JOptionPane.showMessageDialog(null, "No hay elemetos para ingresar a la lista");
            } else {

                insertardespues(datoPosicion, d);
                campo1.setText("");
                campoPosicion.setText("");
                JOptionPane.showMessageDialog(null, "Elemento Ingresado a la lista");
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "No se ingreso elemento a la lista " + e);
        }    

    }//GEN-LAST:event_insertarEnUnaPosicionActionPerformed

    private void eliminarEnUnaPosicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarEnUnaPosicionActionPerformed
        // TODO add your handling code here:
        try {
            int conf = JOptionPane.showConfirmDialog(this, "¿Quieres eliminar un elemento?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (conf == 0) {
                int datoPosicion = Integer.parseInt(campoPosicion.getText());
                eliminarEnPosicion(datoPosicion);
                campoPosicion.setText("");
                JOptionPane.showMessageDialog(null, "Se elimino elemento a la lista en la posición "+datoPosicion);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "No se elimino elemento " + e);
        }
    }//GEN-LAST:event_eliminarEnUnaPosicionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaEjemplo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaEjemplo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaEjemplo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaEjemplo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaEjemplo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JTextField campo1;
    private javax.swing.JTextField campo2;
    private javax.swing.JTextField campoPosicion;
    private javax.swing.JButton eliminarEnUnaPosicion;
    private javax.swing.JButton eliminarFinal;
    private javax.swing.JButton eliminarPrincipio;
    private javax.swing.JButton insertarEnUnaPosicion;
    private javax.swing.JButton insertarFinal;
    private javax.swing.JButton insertarPrincipio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mostrarLista;
    private javax.swing.JButton vaciarLista;
    // End of variables declaration//GEN-END:variables
}
